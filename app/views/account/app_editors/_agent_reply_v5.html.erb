<%# V5 Agent Reply Partial - Single container that updates via save & broadcast %>
<div id="app_chat_message_<%= message.id %>" 
     class="mb-4 agent-reply-container"
     data-controller="agent-reply state-preserving"
     data-agent-reply-message-id-value="<%= message.id %>"
     data-state-preserving-target="container">
  
  <div class="flex items-start space-x-2">
    <%# OverSkill Logo %>
    <%= image_tag "overskill-logo.svg", 
        alt: "OverSkill", 
        class: "w-6 h-6 flex-shrink-0 mt-0.5" %>
    
    <div class="flex-1">
      <%# Agent Name %>
      <div class="flex items-center space-x-2">
        <span class="text-gray-900 dark:text-white font-overskill-bold text-base mt-0.5 mb-3">overskill</span>
      </div>
      <%# 1. Thinking Status - Shows when agent is processing %>
      <% if message.thinking_status.present? %>
        <div class="flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400 mb-2">
          <i class="fas fa-brain text-blue-500 animate-pulse"></i>
          <span class="thinking-text"><%= message.thinking_status %></span>
          <% if message.thought_for_seconds.present? %>
            <span class="text-xs text-gray-500">
              (Thought for <%= pluralize(message.thought_for_seconds, 'second') %>)
            </span>
          <% end %>
        </div>
      <% end %>
      
      <%# Deployment Progress Bar - Shows during deployment %>
      <%# 
        NOTE: Deployment attributes are dynamically added to message objects during broadcasting
        via define_singleton_method in AppBuilderV5#broadcast_deployment_progress and 
        DeployAppJob#broadcast_deployment_progress. We use respond_to? to safely check
        if these methods exist before calling them to avoid NoMethodError.
        
        Dynamic attributes include:
        - deployment_status, deployment_progress, deployment_phase
        - deployment_type, deployment_steps, deployment_eta  
        - deployment_url, deployment_error
      %>
      <% deployment_status = message.respond_to?(:deployment_status) ? message.deployment_status : nil %>
      <% if deployment_status.present? && deployment_status == 'deploying' %>
        <div class="mb-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg" data-turbo-permanent>
          <div class="flex items-center space-x-2 mb-2">
            <i class="fas fa-rocket text-blue-600 dark:text-blue-400 animate-pulse"></i>
            <span class="text-sm font-medium text-blue-700 dark:text-blue-300">
              Deploying to <%= message.respond_to?(:deployment_type) ? message.deployment_type : 'preview' %>...
            </span>
          </div>
          
          <%# Progress bar %>
          <div class="relative">
            <% progress = message.respond_to?(:deployment_progress) ? message.deployment_progress : 0 %>
            <% progress ||= 0 %>
            <div class="flex items-center justify-between mb-1">
              <span class="text-xs text-blue-600 dark:text-blue-400">
                <%= message.respond_to?(:deployment_phase) ? message.deployment_phase : 'Initializing' %>
              </span>
              <span class="text-xs text-blue-500 dark:text-blue-400">
                <%= progress %>%
              </span>
            </div>
            <div class="w-full bg-blue-200 dark:bg-blue-800 rounded-full h-2 overflow-hidden">
              <div class="bg-gradient-to-r from-blue-500 to-blue-600 h-2 rounded-full transition-all duration-500 ease-out relative"
                   style="width: <%= progress %>%"
                   data-controller="progress-bar"
                   data-progress-bar-value="<%= progress %>">
                <div class="absolute inset-0 bg-white/30 animate-pulse"></div>
              </div>
            </div>
            
            <%# Deployment steps indicator %>
            <% deployment_steps = message.respond_to?(:deployment_steps) ? message.deployment_steps : nil %>
            <% if deployment_steps.present? %>
              <div class="mt-2 text-xs space-y-1">
                <% deployment_steps.each do |step| %>
                  <div class="flex items-center space-x-2">
                    <% if step['completed'] %>
                      <i class="fas fa-check-circle text-green-500"></i>
                    <% elsif step['current'] %>
                      <i class="fas fa-spinner fa-spin text-blue-500"></i>
                    <% else %>
                      <i class="far fa-circle text-gray-400"></i>
                    <% end %>
                    <span class="<%= step['current'] ? 'text-blue-700 dark:text-blue-300 font-medium' : 'text-gray-600 dark:text-gray-400' %>">
                      <%= step['name'] %>
                    </span>
                    <% if step['duration'] %>
                      <span class="text-gray-500">(<%= step['duration'] %>s)</span>
                    <% end %>
                  </div>
                <% end %>
              </div>
            <% end %>
          </div>
          
          <%# Build countdown timer - Shows during GitHub Actions build %>
          <%# Check if we have build timing metadata to show countdown %>
          <% build_metadata = message.respond_to?(:metadata) && message.metadata.present? ? message.metadata : nil %>
          <% workflow_run_id = build_metadata&.dig('workflow_run_id') %>
          <% build_status = build_metadata&.dig('build_status') %>
          
          <% if workflow_run_id.present? && ['in_progress', 'queued', 'completed'].include?(build_status) %>
            <div class="mt-3 p-2 bg-gray-50 dark:bg-gray-800 rounded border border-gray-200 dark:border-gray-700"
                 data-controller="build-countdown"
                 data-build-countdown-app-id-value="<%= message.app.id %>"
                 data-build-countdown-message-id-value="<%= message.id %>"
                 data-build-countdown-estimated-seconds-value="120">
              
              <div class="flex items-center justify-between text-xs">
                <div class="flex items-center space-x-2">
                  <i class="fas fa-hammer text-gray-500"></i>
                  <span class="font-medium text-gray-700 dark:text-gray-300">GitHub Actions Build</span>
                  <% build_conclusion = build_metadata&.dig('build_conclusion') %>
                  <span data-build-countdown-target="status" class="<%= 
                    case build_status
                    when 'completed'
                      build_conclusion == 'success' ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'
                    else
                      'text-blue-600 dark:text-blue-400'
                    end %>">
                    <%= case build_status
                        when 'completed'
                          build_conclusion == 'success' ? 'Build completed!' : 'Build failed'
                        when 'queued'
                          'Queued...'
                        else
                          'Building...'
                        end %>
                  </span>
                </div>
                <div class="flex items-center space-x-2">
                  <% total_build_seconds = build_metadata&.dig('total_build_seconds') %>
                  <% if build_status == 'completed' && total_build_seconds.present? %>
                    <span class="text-gray-500">Total:</span>
                    <span data-build-countdown-target="timer" class="font-mono text-gray-600 dark:text-gray-400">
                      <%= "#{total_build_seconds / 60}:#{(total_build_seconds % 60).to_s.rjust(2, '0')}" %>
                    </span>
                  <% else %>
                    <span class="text-gray-500">ETA:</span>
                    <span data-build-countdown-target="timer" class="font-mono text-blue-600 dark:text-blue-400">2:00</span>
                  <% end %>
                </div>
              </div>
              
              <%# Build progress bar %>
              <div class="mt-2">
                <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-1">
                  <div data-build-countdown-target="progress" 
                       class="<%= 
                         case build_status
                         when 'completed'
                           build_conclusion == 'success' ? 
                             'bg-gradient-to-r from-green-500 to-green-600' : 
                             'bg-gradient-to-r from-red-500 to-red-600'
                         else
                           'bg-gradient-to-r from-blue-500 to-blue-600'
                         end
                       %> h-1 rounded-full transition-all duration-1000 ease-out"
                       style="width: <%= build_status == 'completed' ? '100' : '0' %>%"></div>
                </div>
              </div>
              
              <%# Elapsed time %>
              <div class="mt-1 text-xs text-gray-500 dark:text-gray-400">
                Elapsed: <span data-build-countdown-target="elapsed" class="font-mono">0:00</span>
              </div>
            </div>
          <% end %>

          <%# Estimated time remaining (fallback for deployment phases without build timing) %>
          <% deployment_eta = message.respond_to?(:deployment_eta) ? message.deployment_eta : nil %>
          <% if deployment_eta.present? && workflow_run_id.blank? %>
            <div class="mt-2 text-xs text-blue-600 dark:text-blue-400">
              Estimated time remaining: <%= deployment_eta %> seconds
            </div>
          <% end %>
        </div>
      <% elsif deployment_status == 'deployed' %>
        <%# Deployment success message %>
        <div class="mb-3 p-3 bg-green-50 dark:bg-green-900/20 rounded-lg">
          <div class="flex items-center space-x-2">
            <i class="fas fa-check-circle text-green-600 dark:text-green-400"></i>
            <span class="text-sm font-medium text-green-700 dark:text-green-300">
              Successfully deployed to <%= message.respond_to?(:deployment_type) ? message.deployment_type : 'preview' %>
            </span>
            <% deployment_url = message.respond_to?(:deployment_url) ? message.deployment_url : nil %>
            <% if deployment_url.present? %>
              <a href="<%= deployment_url %>" target="_blank" class="text-xs text-green-600 hover:text-green-700 underline">
                View site →
              </a>
            <% end %>
          </div>
        </div>
      <% elsif deployment_status == 'failed' %>
        <%# Deployment failure message %>
        <div class="mb-3 p-3 bg-red-50 dark:bg-red-900/20 rounded-lg">
          <div class="flex items-center space-x-2">
            <i class="fas fa-exclamation-triangle text-red-600 dark:text-red-400"></i>
            <span class="text-sm font-medium text-red-700 dark:text-red-300">
              Deployment failed
            </span>
            <% deployment_error = message.respond_to?(:deployment_error) ? message.deployment_error : nil %>
            <% if deployment_error.present? %>
              <span class="text-xs text-red-600 dark:text-red-400">
                - <%= deployment_error %>
              </span>
            <% end %>
          </div>
        </div>
      <% end %>
      
      <%# 2. Conversation Flow - Interleaved messages and tool calls %>
      <% if message.conversation_flow.present? && message.conversation_flow.any? %>
        <div class="space-y-3 mb-3">
          <%# Group consecutive tool entries %>
          <% grouped_flow = [] %>
          <% current_tools = [] %>
          
          <% message.conversation_flow.each_with_index do |item, idx| %>
            <% if item['type'] == 'tools' %>
              <%# Accumulate consecutive tool entries %>
              <% current_tools.concat(item['calls'] || item['tool_calls'] || []) %>
              <%# Check if next item is also tools, if not, flush %>
              <% next_item = message.conversation_flow[idx + 1] %>
              <% if !next_item || next_item['type'] != 'tools' %>
                <%# Flush accumulated tools %>
                <% if current_tools.any? %>
                  <% grouped_flow << { 'type' => 'grouped_tools', 'calls' => current_tools, 'iteration' => item['iteration'] } %>
                  <% current_tools = [] %>
                <% end %>
              <% end %>
            <% else %>
              <%# Flush any pending tools before adding non-tool item %>
              <% if current_tools.any? %>
                <% grouped_flow << { 'type' => 'grouped_tools', 'calls' => current_tools } %>
                <% current_tools = [] %>
              <% end %>
              <% grouped_flow << item %>
            <% end %>
          <% end %>
          
          <%# Render grouped flow %>
          <% grouped_flow.each_with_index do |flow_item, index| %>
            <% case flow_item['type'] %>
            <% when 'grouped_tools' %>
              <%# Render grouped tools using partial %>
              <%= render 'account/app_editors/conversation_tools', 
                         tools: flow_item,
                         message_id: message.id,
                         index: index %>
              
            <% when 'message', 'content' %>
              <%# Render message using partial %>
              <%= render 'account/app_editors/conversation_message',
                         item: flow_item,
                         message_id: message.id,
                         index: index %>
              
            <% when 'thinking' %>
              <%# Thinking message - subtle display (TODO: Consider removing later) %>
              <% if flow_item['content'].present? %>
                <div class="flex items-start space-x-2 text-xs text-gray-500 dark:text-gray-600 italic opacity-70 pl-4 border-l-2 border-gray-200 dark:border-gray-700">
                  <i class="fas fa-brain text-gray-400 mt-0.5"></i>
                  <span class="whitespace-pre-wrap"><%= flow_item['content'] %></span>
                </div>
              <% end %>
              
            <% when 'status' %>
              <%# Status update %>
              <div class="hidden flex items-center space-x-2 text-sm text-blue-600 dark:text-blue-400">
                <i class="fas fa-info-circle"></i>
                <span><%= flow_item['content'] %></span>
              </div>
              
            <% when 'error' %>
              <%# Error message %>
              <div class="flex items-center space-x-2 text-sm text-red-600 dark:text-red-400">
                <i class="fas fa-exclamation-triangle"></i>
                <span><%= flow_item['content'] %></span>
              </div>
            <% end %>
          <% end %>
        </div>
        
      <%# Fallback to old structure for backwards compatibility %>
      <% elsif message.loop_messages.any? %>
        <div class="space-y-3 mb-3">
          <% message.loop_messages.each_with_index do |loop_msg, index| %>
            <div class="agent-loop-message" 
                 id="loop_message_<%= message.id %>_<%= index %>"
                 data-iteration="<%= loop_msg['iteration'] || 0 %>">
              
              <% case loop_msg['type'] %>
              <% when 'status' %>
                <%# Status update (e.g., "Analyzing requirements...") %>
                <div class="flex items-center space-x-2 text-sm text-blue-600 dark:text-blue-400">
                  <i class="fas fa-info-circle"></i>
                  <span><%= loop_msg['content'] %></span>
                </div>
                
              <% when 'error' %>
                <%# Error message %>
                <div class="flex items-center space-x-2 text-sm text-red-600 dark:text-red-400">
                  <i class="fas fa-exclamation-triangle"></i>
                  <span><%= loop_msg['content'] %></span>
                </div>
                
              <% else %>
                <%# Regular markdown content %>
                <div class="prose prose-sm dark:prose-invert max-w-none text-gray-700 dark:text-gray-300">
                  <%= render_markdown(loop_msg['content']) %>
                </div>
              <% end %>
            </div>
          <% end %>
        </div>
      <% elsif message.content.present? %>
        <%# Fallback to regular content if no loop messages %>
        <div class="prose prose-sm dark:prose-invert max-w-none text-gray-700 dark:text-gray-300 mb-3">
          <%= render_markdown(message.content) %>
        </div>
      <% end %>
      
      <%# 3. Tool Calls - Only show if not using conversation_flow %>
      <% if message.tool_calls.any? && message.conversation_flow.blank? %>
        <details class="mb-3 p-2 bg-gray-50 dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700"
                 data-state-preserving-target="details"
                 data-details-id="tools_<%= message.id %>"
                 data-action="toggle->state-preserving#detailsToggled">
          <summary class="cursor-pointer text-sm text-gray-600 dark:text-gray-400 flex items-center justify-between">
            <div class="flex items-center space-x-2">
              <i class="fas fa-tools"></i>
              <span><%= pluralize(message.tool_calls.count, 'tool') %> used</span>
            </div>
            <span class="text-xs text-blue-600 dark:text-blue-400" data-state-preserving-target="toggleText" data-show-text="Show All" data-hide-text="Hide">Show All</span>
          </summary>
          
          <div class="mt-3 space-y-2 border-t border-gray-200 dark:border-gray-700 pt-3">
            <% message.tool_calls.each do |tool| %>
              <div class="flex items-start space-x-2 text-xs">
                <%# Tool icon based on tool name %>
                <% icon_class = case tool['name']
                  when /write|create/ then 'fa-file-circle-plus text-green-500'
                  when /edit|update|replace/ then 'fa-pen-to-square text-blue-500'
                  when /delete|remove/ then 'fa-trash text-red-500'
                  when /search|find/ then 'fa-magnifying-glass text-purple-500'
                  when /read|view/ then 'fa-eye text-gray-500'
                  when /image/ then 'fa-image text-indigo-500'
                  when /web/ then 'fa-globe text-cyan-500'
                  else 'fa-gear text-gray-500'
                end %>
                <i class="fas <%= icon_class %> mt-0.5"></i>
                
                <div class="flex-1">
                  <span class="font-medium text-gray-700 dark:text-gray-300">
                    <%= tool['name'].to_s.gsub(/^os-/, '').humanize %>
                  </span>
                  
                  <% if tool['file_path'].present? %>
                    <span class="text-gray-500 dark:text-gray-400 ml-1">
                      [<%= tool['file_path'] %>]
                    </span>
                  <% end %>
                  
                  <% if tool['status'] == 'error' %>
                    <span class="text-red-500 ml-2">
                      <i class="fas fa-times-circle"></i> Failed
                    </span>
                  <% elsif tool['status'] == 'running' %>
                    <span class="text-yellow-500 ml-2">
                      <i class="fas fa-spinner fa-spin"></i> Running
                    </span>
                  <% else %>
                    <span class="text-green-500 ml-2">
                      <i class="fas fa-check-circle"></i>
                    </span>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>
        </details>
      <% end %>
      
      <%# 4. App Version Card - Only shows if code was generated %>
      <% if message.is_code_generation && message.app_version.present? %>
        <%= render "account/app_editors/unified_version_card", 
            message: message, 
            next_version_number: nil %>
      <% end %>

      <%# 1. Thinking Status - Shows when agent is processing %>
      <% if message.thinking_status.present? && message.loop_messages.sum { |msg| msg.to_s.length } > 300 %>
        <div class="flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400 mb-2">
          <i class="fas fa-brain text-blue-500 animate-pulse"></i>
          <span class="thinking-text"><%= message.thinking_status %></span>
          <% if message.thought_for_seconds.present? %>
            <span class="text-xs text-gray-500">
              (Thought for <%= pluralize(message.thought_for_seconds, 'second') %>)
            </span>
          <% end %>
        </div>
      <% end %>
      
      <%# Status indicator for completed/failed messages %>
      <% if message.status.present? && !message.thinking_status.present? %>
        <div class="mt-2 flex items-center text-xs text-gray-500 dark:text-gray-400">
          <div class="w-1 h-1 rounded-full mr-1.5 <%= message.status == 'completed' ? 'bg-green-500' : message.status == 'failed' ? 'bg-red-500' : 'bg-yellow-500 animate-pulse' %>"></div>
          <%= message.status_text %>
          <% if message.iteration_count > 0 %>
            <span class="ml-2">• <%= pluralize(message.iteration_count, 'iteration') %></span>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
</div>