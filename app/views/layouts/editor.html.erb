<!DOCTYPE html>
<html class="theme-<%= BulletTrain::Themes::Light.color %> <%= "theme-secondary-#{BulletTrain::Themes::Light.secondary_color}" if BulletTrain::Themes::Light.secondary_color %>" lang="<%= I18n.locale %>">
  <head>
    <%= render 'layouts/head' %>
    
    <!-- Essential Rails JavaScript and CSS includes -->
    <%= stylesheet_link_tag "application.light", "data-turbo-track": "reload" %>
    <%= javascript_include_tag "application", "data-turbo-track": "reload", defer: true %>
    <style>
      /* Editor-specific styles */
      .monaco-editor { font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace; }
      #preview_frame { background: white; }
      
      /* Custom Animations */
      @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
      }

      @keyframes slideUp {
        from { 
          opacity: 0; 
          transform: translateY(16px); 
        }
        to { 
          opacity: 1; 
          transform: translateY(0); 
        }
      }

      @keyframes slideDown {
        from { 
          opacity: 0; 
          transform: translateY(-16px); 
        }
        to { 
          opacity: 1; 
          transform: translateY(0); 
        }
      }

      .animate-fadeIn {
        animation: fadeIn 0.2s ease-out;
      }

      .animate-slideUp {
        animation: slideUp 0.3s ease-out;
      }

      .animate-slideDown {
        animation: slideDown 0.3s ease-out;
      }
      
      /* Light mode styles (default) */
      :root {
        --bg-primary: theme('colors.white');
        --bg-secondary: theme('colors.gray.50');
        --bg-tertiary: theme('colors.gray.100');
        --bg-editor: theme('colors.gray.900');
        --text-primary: theme('colors.gray.900');
        --text-secondary: theme('colors.gray.600');
        --text-tertiary: theme('colors.gray.500');
        --border-primary: theme('colors.gray.200');
        --border-secondary: theme('colors.gray.100');
      }
      
      /* Dark mode styles */
      .dark {
        --bg-primary: theme('colors.gray.900');
        --bg-secondary: theme('colors.gray.800');
        --bg-tertiary: theme('colors.gray.700');
        --bg-editor: theme('colors.gray.900');
        --text-primary: theme('colors.gray.100');
        --text-secondary: theme('colors.gray.300');
        --text-tertiary: theme('colors.gray.400');
        --border-primary: theme('colors.gray.700');
        --border-secondary: theme('colors.gray.600');
      }
      
      /* Mobile viewport fixes */
      @supports (height: 100dvh) {
        body {
          height: 100dvh; /* Dynamic viewport height - excludes mobile browser UI */
        }
      }
      
      /* Ensure no unwanted scrollbars */
      html, body {
        overflow-x: hidden;
      }
      
      /* Fix for mobile browsers that change viewport height */
      @media screen and (max-width: 1024px) {
        body {
          height: 100vh;
          height: 100dvh; /* Fallback for browsers that support it */
          min-height: -webkit-fill-available; /* iOS Safari fallback */
        }
      }
    </style>
    <script>
      // Immediate error prevention to stop page from going blank
      (function() {
        // Override document.write immediately
        const originalWrite = document.write;
        document.write = function(content) {
          console.warn('[Early] Blocked document.write:', content.substring(0, 50));
          if (content.includes('@ungap/custom-elements-builtin')) {
            // Already loaded via script tag
            return;
          }
          if (document.readyState === 'complete') {
            originalWrite.call(document, content);
          }
        };
        
        // Catch early errors
        window.addEventListener('error', function(e) {
          if (e.message && (e.message.includes('chrome-extension://') || 
                           e.message.includes('document.write'))) {
            e.preventDefault();
            console.warn('[Early] Suppressed error:', e.message);
          }
        }, true);
      })();
    </script>
  </head>
  <body class="h-screen bg-white dark:bg-gray-900 text-gray-900 dark:text-slate-300 text-sm font-normal transition-colors duration-200 overflow-hidden" data-controller="theme error-handler">
    <div class="h-full flex flex-col">
      <%= yield %>
    </div>
    
    <%= turbo_frame_tag "modal" %>
    <% if flash.any? %>
      <div id="flash" class="fixed top-4 right-4 z-50 space-y-2">
        <% flash.each do |type, message| %>
          <% color = type.to_s == 'notice' ? 'green' : 'red' %>
          <div class="bg-<%= color %>-100 border border-<%= color %>-400 text-<%= color %>-700 px-4 py-3 rounded relative" role="alert" data-turbo-temporary>
            <span class="block sm:inline"><%= message %></span>
            <button type="button" class="absolute top-0 bottom-0 right-0 px-4 py-3" onclick="this.parentElement.remove()">
              <svg class="fill-current h-6 w-6 text-<%= color %>-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                <title>Close</title>
                <path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"/>
              </svg>
            </button>
          </div>
        <% end %>
      </div>
    <% end %>
  </body>
</html>