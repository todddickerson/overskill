module AI
  module Templates
    class HelloWorldTemplate
      FRAMEWORKS = {
        "vanilla" => {
          files: [
            {
              path: "index.html",
              content: <<~HTML
                <!DOCTYPE html>
                <html lang="en">
                <head>
                    <meta charset="UTF-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1.0">
                    <title>{{APP_NAME}}</title>
                    <style>
                        body {
                            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                            margin: 0;
                            padding: 0;
                            display: flex;
                            justify-content: center;
                            align-items: center;
                            min-height: 100vh;
                            background: linear-gradient(135deg, {{BG_COLOR_1}} 0%, {{BG_COLOR_2}} 100%);
                        }
                        .container {
                            text-align: center;
                            padding: 2rem;
                            background: white;
                            border-radius: 10px;
                            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                            max-width: 600px;
                            margin: 1rem;
                        }
                        h1 {
                            color: {{TEXT_COLOR}};
                            margin-bottom: 1rem;
                        }
                        .message {
                            color: #666;
                            line-height: 1.6;
                            margin-bottom: 2rem;
                        }
                        .button {
                            background: {{BUTTON_COLOR}};
                            color: white;
                            border: none;
                            padding: 0.75rem 2rem;
                            font-size: 1rem;
                            border-radius: 5px;
                            cursor: pointer;
                            transition: transform 0.2s;
                        }
                        .button:hover {
                            transform: translateY(-2px);
                        }
                        #counter {
                            font-size: 2rem;
                            margin: 1rem 0;
                            color: {{TEXT_COLOR}};
                        }
                    </style>
                </head>
                <body>
                    <div class="container">
                        <h1>{{GREETING}}</h1>
                        <p class="message">{{MESSAGE}}</p>
                        <div id="counter">0</div>
                        <button class="button" onclick="incrementCounter()">{{BUTTON_TEXT}}</button>
                    </div>
                    <script src="app.js"></script>
                </body>
                </html>
              HTML
            },
            {
              path: "app.js",
              content: <<~JS
                // {{APP_NAME}} - Generated by OverSkill
                let count = 0;

                function incrementCounter() {
                    count++;
                    document.getElementById('counter').textContent = count;
                    
                    // Add a fun message every 10 clicks
                    if (count % 10 === 0) {
                        alert('{{MILESTONE_MESSAGE}}');
                    }
                }

                // Initialize
                document.addEventListener('DOMContentLoaded', function() {
                    console.log('{{APP_NAME}} initialized!');
                });
              JS
            }
          ]
        },
        "react" => {
          files: [
            {
              path: "index.html",
              content: <<~HTML
                <!DOCTYPE html>
                <html lang="en">
                <head>
                    <meta charset="UTF-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1.0">
                    <title>{{APP_NAME}}</title>
                    <script crossorigin src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
                    <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"></script>
                    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
                    <style>
                        body {
                            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                            margin: 0;
                            padding: 0;
                            background: linear-gradient(135deg, {{BG_COLOR_1}} 0%, {{BG_COLOR_2}} 100%);
                        }
                    </style>
                </head>
                <body>
                    <div id="root"></div>
                    <script type="text/babel" src="app.js"></script>
                </body>
                </html>
              HTML
            },
            {
              path: "app.js",
              content: <<~JS
                // {{APP_NAME}} - React App Generated by OverSkill

                function App() {
                    const [count, setCount] = React.useState(0);

                    const incrementCounter = () => {
                        const newCount = count + 1;
                        setCount(newCount);
                        
                        if (newCount % 10 === 0) {
                            alert('{{MILESTONE_MESSAGE}}');
                        }
                    };

                    return (
                        <div style={{
                            display: 'flex',
                            justifyContent: 'center',
                            alignItems: 'center',
                            minHeight: '100vh'
                        }}>
                            <div style={{
                                textAlign: 'center',
                                padding: '2rem',
                                background: 'white',
                                borderRadius: '10px',
                                boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
                                maxWidth: '600px',
                                margin: '1rem'
                            }}>
                                <h1 style={{ color: '{{TEXT_COLOR}}' }}>{{GREETING}}</h1>
                                <p style={{ color: '#666', lineHeight: 1.6, marginBottom: '2rem' }}>
                                    {{MESSAGE}}
                                </p>
                                <div style={{ fontSize: '2rem', margin: '1rem 0', color: '{{TEXT_COLOR}}' }}>
                                    {count}
                                </div>
                                <button
                                    onClick={incrementCounter}
                                    style={{
                                        background: '{{BUTTON_COLOR}}',
                                        color: 'white',
                                        border: 'none',
                                        padding: '0.75rem 2rem',
                                        fontSize: '1rem',
                                        borderRadius: '5px',
                                        cursor: 'pointer'
                                    }}
                                    onMouseEnter={(e) => e.target.style.transform = 'translateY(-2px)'}
                                    onMouseLeave={(e) => e.target.style.transform = 'translateY(0)'}
                                >
                                    {{BUTTON_TEXT}}
                                </button>
                            </div>
                        </div>
                    );
                }

                ReactDOM.render(<App />, document.getElementById('root'));
              JS
            }
          ]
        }
      }

      def self.generate(framework: "vanilla", customizations: {})
        template = FRAMEWORKS[framework]
        return nil unless template

        # Default customizations
        defaults = {
          "APP_NAME" => "My Awesome App",
          "GREETING" => "Hello World!",
          "MESSAGE" => "Welcome to your new app. Click the button to see it in action!",
          "BUTTON_TEXT" => "Click Me!",
          "MILESTONE_MESSAGE" => "Wow! You've clicked 10 times!",
          "BG_COLOR_1" => "#667eea",
          "BG_COLOR_2" => "#764ba2",
          "TEXT_COLOR" => "#333",
          "BUTTON_COLOR" => "#667eea"
        }

        # Merge customizations
        replacements = defaults.merge(customizations)

        # Process template files
        files = template[:files].map do |file|
          content = file[:content]
          
          # Replace all placeholders
          replacements.each do |key, value|
            content = content.gsub("{{#{key}}}", value.to_s)
          end

          {
            path: file[:path],
            content: content,
            type: determine_file_type(file[:path])
          }
        end

        {
          files: files,
          customizations_applied: replacements
        }
      end

      private

      def self.determine_file_type(path)
        ext = File.extname(path).downcase.delete('.')
        case ext
        when 'html', 'htm' then 'html'
        when 'js', 'jsx' then 'javascript'
        when 'css' then 'css'
        else 'text'
        end
      end
    end
  end
end