name: Deploy to OverSkill Workers for Platforms

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        # Removed cache: 'npm' until package-lock.json is available
        
    - name: Create .env file with app-specific variables
      run: |
        cat > .env << EOF
        VITE_APP_ID={{APP_ID}}
        VITE_SUPABASE_URL=https://vhctutvepgdgtpsbnzvp.supabase.co
        VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZoY3R1dHZlcGdkZ3Rwc2JuenZwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzA1MDM4NjIsImV4cCI6MjA0NjA3OTg2Mn0.mKKEi_IqJMGy6vl9sLX_DSlP-ZG7Kw-6VR_zKBOqoJ0
        VITE_OWNER_ID={{OWNER_ID}}
        VITE_ENVIRONMENT=production
        VITE_ANALYTICS_ENABLED=true
        VITE_R2_BASE_URL=https://pub.overskill.com
        VITE_USE_LOCAL_ASSETS=false
        EOF
        echo "✅ Created .env file with app-specific configuration"
        
    - name: Install dependencies
      run: npm install
      
    - name: Build Vite application
      run: npm run build
      
    - name: Skip Preview Deployment (Handled by OverSkill Platform)
      # Preview deployment is handled immediately by the OverSkill platform
      # GitHub Actions only handles production and staging deployments
      if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[deploy:production]')
      run: |
        echo "ℹ️ Preview deployment is handled by OverSkill platform's immediate deployment"
        echo "ℹ️ GitHub Actions workflow is for production/staging deployments only"
        echo "✅ Preview already deployed at: https://preview-{{APP_ID}}.overskill.app"
        
    - name: Deploy to Workers for Platforms (Production)
      # Only deploy to production if commit message contains [deploy:production] or [production]
      if: github.ref == 'refs/heads/main' && (contains(github.event.head_commit.message, '[deploy:production]') || contains(github.event.head_commit.message, '[production]'))
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      run: |
        # Deploy to WFP namespace using direct API call
        NAMESPACE="overskill-development-production"
        SCRIPT_NAME="{{APP_ID}}"
        
        echo "🚀 Deploying to production WFP namespace..."
        
        # Create form data for multipart upload (main module must match uploaded file name)
        curl -X PUT "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT_ID}/workers/dispatch/namespaces/${NAMESPACE}/scripts/${SCRIPT_NAME}" \
          -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
          -H "Content-Type: multipart/form-data" \
          -F "metadata={\"main_module\":\"index.js\",\"compatibility_date\":\"2024-01-01\"}" \
          -F "index.js=@dist/index.js;type=application/javascript+module"
        
        echo "✅ Deployed to production: https://{{APP_ID}}.overskill.app"

    # Staging deployment (manual trigger or special branch)
    - name: Deploy to Workers for Platforms (Staging)
      if: github.ref == 'refs/heads/staging'
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      run: |
        # Deploy to WFP namespace using direct API call
        NAMESPACE="overskill-development-staging"
        SCRIPT_NAME="staging-{{APP_ID}}"
        
        echo "🚀 Deploying to staging WFP namespace..."
        
        # Create form data for multipart upload (main module must match uploaded file name)
        curl -X PUT "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT_ID}/workers/dispatch/namespaces/${NAMESPACE}/scripts/${SCRIPT_NAME}" \
          -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
          -H "Content-Type: multipart/form-data" \
          -F "metadata={\"main_module\":\"index.js\",\"compatibility_date\":\"2024-01-01\"}" \
          -F "index.js=@dist/index.js;type=application/javascript+module"
        
        echo "✅ Deployed to staging: https://staging-{{APP_ID}}.overskill.app"